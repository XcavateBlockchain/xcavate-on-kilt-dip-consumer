
//! Autogenerated weights for `pallet_property_management`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-03-06, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `LAPTOP-DFFNONK6`, CPU: `11th Gen Intel(R) Core(TM) i7-1165G7 @ 2.80GHz`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: 1024

// Executed Command:
// ./target/release/node-template
// benchmark
// pallet
// --chain
// dev
// --pallet
// pallet_property_management
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// pallets/property-management/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

pub trait WeightInfo {
	fn add_letting_agent() -> Weight;
	fn letting_agent_deposit() -> Weight;
	fn add_letting_agent_to_location() -> Weight;
	fn set_letting_agent() -> Weight;
	fn distribute_income() -> Weight;
	fn withdraw_funds() -> Weight;
}

/// Weight functions for `pallet_property_management`.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `NftMarketplace::RegionCollections` (r:1 w:0)
	/// Proof: `NftMarketplace::RegionCollections` (`max_values`: None, `max_size`: Some(24), added: 2499, mode: `MaxEncodedLen`)
	/// Storage: `NftMarketplace::LocationRegistration` (r:1 w:0)
	/// Proof: `NftMarketplace::LocationRegistration` (`max_values`: None, `max_size`: Some(41), added: 2516, mode: `MaxEncodedLen`)
	/// Storage: `PropertyManagement::LettingInfo` (r:0 w:1)
	/// Proof: `PropertyManagement::LettingInfo` (`max_values`: None, `max_size`: Some(4489), added: 6964, mode: `MaxEncodedLen`)
	fn add_letting_agent() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `277`
		//  Estimated: `3506`
		// Minimum execution time: 19_035_000 picoseconds.
		Weight::from_parts(20_105_000, 0)
			.saturating_add(Weight::from_parts(0, 3506))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `PropertyManagement::LettingInfo` (r:1 w:1)
	/// Proof: `PropertyManagement::LettingInfo` (`max_values`: None, `max_size`: Some(4489), added: 6964, mode: `MaxEncodedLen`)
	/// Storage: `PropertyManagement::LettingAgentLocations` (r:1 w:1)
	/// Proof: `PropertyManagement::LettingAgentLocations` (`max_values`: None, `max_size`: Some(3242), added: 5717, mode: `MaxEncodedLen`)
	fn letting_agent_deposit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `161`
		//  Estimated: `7954`
		// Minimum execution time: 30_985_000 picoseconds.
		Weight::from_parts(37_635_000, 0)
			.saturating_add(Weight::from_parts(0, 7954))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `PropertyManagement::LettingInfo` (r:1 w:0)
	/// Proof: `PropertyManagement::LettingInfo` (`max_values`: None, `max_size`: Some(4489), added: 6964, mode: `MaxEncodedLen`)
	/// Storage: `NftMarketplace::LocationRegistration` (r:1 w:0)
	/// Proof: `NftMarketplace::LocationRegistration` (`max_values`: None, `max_size`: Some(41), added: 2516, mode: `MaxEncodedLen`)
	/// Storage: `PropertyManagement::LettingAgentLocations` (r:1 w:1)
	/// Proof: `PropertyManagement::LettingAgentLocations` (`max_values`: None, `max_size`: Some(3242), added: 5717, mode: `MaxEncodedLen`)
	fn add_letting_agent_to_location() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `551`
		//  Estimated: `7954`
		// Minimum execution time: 22_490_000 picoseconds.
		Weight::from_parts(28_026_000, 0)
			.saturating_add(Weight::from_parts(0, 7954))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `NftMarketplace::RegisteredNftDetails` (r:1 w:0)
	/// Proof: `NftMarketplace::RegisteredNftDetails` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
	/// Storage: `PropertyManagement::LettingStorage` (r:1 w:1)
	/// Proof: `PropertyManagement::LettingStorage` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PropertyManagement::LettingAgentLocations` (r:1 w:0)
	/// Proof: `PropertyManagement::LettingAgentLocations` (`max_values`: None, `max_size`: Some(3242), added: 5717, mode: `MaxEncodedLen`)
	/// Storage: `PropertyManagement::LettingInfo` (r:1 w:1)
	/// Proof: `PropertyManagement::LettingInfo` (`max_values`: None, `max_size`: Some(4489), added: 6964, mode: `MaxEncodedLen`)
	fn set_letting_agent() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `703`
		//  Estimated: `7954`
		// Minimum execution time: 31_040_000 picoseconds.
		Weight::from_parts(44_638_000, 0)
			.saturating_add(Weight::from_parts(0, 7954))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `PropertyManagement::LettingStorage` (r:1 w:0)
	/// Proof: `PropertyManagement::LettingStorage` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `NftMarketplace::PropertyOwner` (r:1 w:0)
	/// Proof: `NftMarketplace::PropertyOwner` (`max_values`: None, `max_size`: Some(3222), added: 5697, mode: `MaxEncodedLen`)
	/// Storage: `NftMarketplace::PropertyOwnerToken` (r:1 w:0)
	/// Proof: `NftMarketplace::PropertyOwnerToken` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `PropertyManagement::StoredFunds` (r:1 w:1)
	/// Proof: `PropertyManagement::StoredFunds` (`max_values`: None, `max_size`: Some(64), added: 2539, mode: `MaxEncodedLen`)
	fn distribute_income() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `705`
		//  Estimated: `6687`
		// Minimum execution time: 65_976_000 picoseconds.
		Weight::from_parts(77_754_000, 0)
			.saturating_add(Weight::from_parts(0, 6687))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `PropertyManagement::StoredFunds` (r:1 w:1)
	/// Proof: `PropertyManagement::StoredFunds` (`max_values`: None, `max_size`: Some(64), added: 2539, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn withdraw_funds() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `312`
		//  Estimated: `3593`
		// Minimum execution time: 55_540_000 picoseconds.
		Weight::from_parts(73_592_000, 0)
			.saturating_add(Weight::from_parts(0, 3593))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
}
